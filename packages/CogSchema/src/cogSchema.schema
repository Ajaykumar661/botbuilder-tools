{
    "$id": "https://raw.githubusercontent.com/Microsoft/botbuilder-tools/SchemaGen/packages/CogSchema/src/cogSchema.schema",
    "title": "JSON Schema definition for cog schemas.",
    "description": "In order to create a component for Bot Framework .cog files you need to create a schema file describing your configuration that meets this definition.",
    "definitions": {
        "role": {
            "title": "$role",
            "description": "Schema definition fro $role added by cogSchema.",
            "type": "string",
            "pattern": "^((lg)|unionType|(unionType\\([a-zA-Z][a-zA-Z0-9.]*\\)))$"
        },
        "id": {
            "title": "$id",
            "description": "Schema definition for $id added by cogSchema.",
            "type": "string",
            "pattern": "^([a-zA-Z][a-zA-Z0-9.]*)$"
        },
        "copy": {
            "title": "$copy",
            "description": "Schema deifnition for $copy added by cogSchema.",
            "type": "string",
            "pattern": "^(([a-zA-Z][a-zA-Z0-9.]*)?(#[a-zA-Z][a-zA-Z0-9.]*)?)$"
        },
        "type": {
            "title": "$type",
            "description": "Schema definition for $type added by cogSchema.",
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$"
        },
        "metaSchema": {
            "title": "Core schema meta-schema",
            "definitions": {
                "schemaArray": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/metaSchema"
                    }
                },
                "nonNegativeInteger": {
                    "type": "integer",
                    "minimum": 0
                },
                "nonNegativeIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/metaSchema/definitions/nonNegativeInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": []
                }
            },
            "type": [
                "object",
                "boolean"
            ],
            "properties": {
                "$id": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$schema": {
                    "type": "string",
                    "format": "uri"
                },
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$comment": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": true,
                "readOnly": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": true
                },
                "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                },
                "maximum": {
                    "type": "number"
                },
                "exclusiveMaximum": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "exclusiveMinimum": {
                    "type": "number"
                },
                "maxLength": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeInteger"
                },
                "minLength": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeIntegerDefault0"
                },
                "pattern": {
                    "type": "string",
                    "format": "regex"
                },
                "additionalItems": {
                    "$ref": "#/definitions/metaSchema"
                },
                "items": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/metaSchema"
                        },
                        {
                            "$ref": "#/definitions/metaSchema/definitions/schemaArray"
                        }
                    ],
                    "default": true
                },
                "maxItems": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeInteger"
                },
                "minItems": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeIntegerDefault0"
                },
                "uniqueItems": {
                    "type": "boolean",
                    "default": false
                },
                "contains": {
                    "$ref": "#/definitions/metaSchema"
                },
                "maxProperties": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeInteger"
                },
                "minProperties": {
                    "$ref": "#/definitions/metaSchema/definitions/nonNegativeIntegerDefault0"
                },
                "required": {
                    "$ref": "#/definitions/metaSchema/definitions/stringArray"
                },
                "additionalProperties": {
                    "$ref": "#/definitions/metaSchema"
                },
                "definitions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/metaSchema"
                    },
                    "default": {}
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/metaSchema"
                    },
                    "default": {}
                },
                "patternProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/metaSchema"
                    },
                    "propertyNames": {
                        "format": "regex"
                    },
                    "default": {}
                },
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/metaSchema"
                            },
                            {
                                "$ref": "#/definitions/metaSchema/definitions/stringArray"
                            }
                        ]
                    }
                },
                "propertyNames": {
                    "$ref": "#/definitions/metaSchema"
                },
                "const": true,
                "enum": {
                    "type": "array",
                    "items": true,
                    "minItems": 1,
                    "uniqueItems": true
                },
                "type": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/metaSchema/definitions/simpleTypes"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/metaSchema/definitions/simpleTypes"
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        }
                    ]
                },
                "format": {
                    "type": "string"
                },
                "contentMediaType": {
                    "type": "string"
                },
                "contentEncoding": {
                    "type": "string"
                },
                "if": {
                    "$ref": "#/definitions/metaSchema"
                },
                "then": {
                    "$ref": "#/definitions/metaSchema"
                },
                "else": {
                    "$ref": "#/definitions/metaSchema"
                },
                "allOf": {
                    "$ref": "#/definitions/metaSchema/definitions/schemaArray"
                },
                "anyOf": {
                    "$ref": "#/definitions/metaSchema/definitions/schemaArray"
                },
                "oneOf": {
                    "$ref": "#/definitions/metaSchema/definitions/schemaArray"
                },
                "not": {
                    "$ref": "#/definitions/metaSchema"
                }
            },
            "default": true
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/metaSchema"
        },
        {
            "properties": {
                "additionalProperties": {
                    "$ref": "#"
                },
                "$role": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/role"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/role"
                            }
                        }
                    ]
                }
            }
        }
    ]
}
